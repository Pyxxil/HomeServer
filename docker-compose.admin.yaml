x-common-admin: &admin
  traefik:
    container_name: traefik
    image: traefik
    <<: *common
    command:
      - --api=true
      - --api.dashboard=true
      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=0
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53
      - --certificatesresolvers.letsencrypt.acme.email=${ADMIN_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/config/acme.json
      - --entrypoints.web.address=:80
      - --entrypoints.web.forwardedHeaders.insecure=false
      - --entrypoints.web.proxyProtocol.insecure=false
      - --entryPoints.web.forwardedHeaders.trustedIPs=10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,fc00::/7,100.0.0.0/8
      - --entryPoints.web.proxyProtocol.trustedIPs=10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,fc00::/7,100.0.0.0/8
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http3
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN}
      - --entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,fc00::/7,100.0.0.0/8
      - --entryPoints.websecure.proxyProtocol.trustedIPs=10.0.0.0/8,172.0.0.0/8,192.168.0.0/16,fc00::/7,100.0.0.0/8
      - --entrypoints.websecure.forwardedHeaders.insecure=false
      - --entrypoints.websecure.proxyProtocol.insecure=false
      - --experimental.http3=true
      - --log.level=debug
      - --ping=true
      - --metrics.prometheus=true
      - --providers.docker=true
      - --providers.docker.watch=true
      - --providers.docker.exposedbydefault=true
      - --providers.docker.network=web
      - --providers.file.directory=/config
    environment:
      <<: *env-vars
      CLOUDFLARE_DNS_API_TOKEN: ${CLOUDFLARE_DNS_API_TOKEN}
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp
      - 8080:8080
      - 8888:8888
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - config-traefik:/config
    networks:
      internal:
      web:
        priority: 20
        aliases:
          - auth.${DOMAIN}
      private_network:
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    labels:
      traefik.http.routers.dashboard.rule: Host(`dash.${DOMAIN}`)
      traefik.http.routers.dashboard.service: api@internal
      traefik.http.routers.dashboard.middlewares: authelia
      traefik.http.routers.dashboard.tls: true
      traefik.http.routers.dashboard.tls.certResolver: letsencrypt
      traefik.http.routers.http-catchall.rule: hostregexp(`{host:.+}`)
      traefik.http.routers.http-catchall.entrypoints: web
      traefik.http.routers.http-catchall.middlewares: redirect-to-https
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.middlewares.redirect-to-https.redirectScheme.permanent: true

  portainer:
    image: portainer/portainer-ce
    container_name: admin
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - config-portainer:/data
    <<: *common
    labels:
      traefik.http.routers.admin.rule: Host(`admin.${DOMAIN}`)
      traefik.http.services.admin.loadbalancer.server.port: 9000
      traefik.http.routers.admin.entrypoints: websecure
      traefik.http.routers.admin.tls: true
      traefik.http.routers.admin.tls.certResolver: letsencrypt

  auth:
    image: authelia/authelia
    container_name: authelia
    <<: *common
    depends_on:
      - ldap
      - wiki
    volumes:
      - config-authelia:/config
    labels:
      traefik.http.routers.auth.rule: Host(`auth.${DOMAIN}`)
      traefik.http.services.auth.loadbalancer.server.port: 9091
      traefik.http.routers.auth.entrypoints: websecure
      traefik.http.routers.auth.tls: true
      traefik.http.routers.auth.tls.certResolver: letsencrypt
      traefik.http.middlewares.authelia.forwardauth.address: http://authelia:9091/api/verify?rd=https://auth.${DOMAIN}
      traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: true
      traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: Remote-User,Remote-Groups,Remote-Name,Remote-Email

  ldap:
    image: osixia/openldap
    container_name: ldap
    <<: *common
    volumes:
      - config-ldap-db:/var/lib/ldap
      - config-ldap:/etc/ldap/slapd.d
    expose:
      - 389
      - 636
    environment:
      <<: *env-vars
      LDAP_ORGANISATION: ${ORGANISATION}
      LDAP_DOMAIN: ${DOMAIN}
      LDAP_BASE_DN: dc=${DC_DOMAIN},dc=${TLD}
      LDAP_RFC2307BIS_SCHEMA: true
      LDAP_ADMIN_PASSWORD: ${LDAP_PASSWORD}
      LDAP_READONLY_USER: false
    labels:
      traefik.enable: false

  ldap-user-manager:
    image: wheelybird/ldap-user-manager
    container_name: ldap-user-manager
    <<: *common
    depends_on:
      - ldap
    environment:
      <<: *env-vars
      SERVER_HOSTNAME: https://ldap.${DOMAIN}
      ORGANISATION_NAME: ${ORGANISATION}
      LDAP_URI: "ldap://ldap"
      LDAP_BASE_DN: dc=${DC_DOMAIN},dc=${TLD}
      LDAP_ADMINS_GROUP: "admins"
      LDAP_ADMIN_BIND_DN: "cn=admin,dc=${DC_DOMAIN},dc=${TLD}"
      LDAP_ADMIN_BIND_PWD: ${LDAP_PASSWORD}
      LDAP_USES_NIS_SCHEMA: false
      LDAP_REQUIRE_STARTTLS: false
      LDAP_DEBUG: true
      NO_HTTPS: true
      SMTP_HOSTNAME: ${SMTP_HOST}
      SMTP_HOST_PORT: 25
      SMTP_USERNAME: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASS}
      EMAIL_FROM_ADDRESS: account@${DOMAIN}
      EMAIL_DOMAIN: ${DOMAIN}
    labels:
      traefik.http.routers.ldap.rule: Host(`ldap.${DOMAIN}`)
      traefik.http.services.ldap.loadbalancer.server.port: 80
      traefik.http.routers.ldap.entrypoints: websecure
      traefik.http.routers.ldap.tls: true
      traefik.http.routers.ldap.tls.certResolver: letsencrypt

  mailrise:
    image: yoryan/mailrise
    container_name: mailrise
    restart: unless-stopped
    command: "-vv /config/mailrise.conf"
    volumes:
      - config-mailrise:/config:ro
    <<: *common
    environment:
      <<: *env-vars
      AWS_URL: ses://${AWS_SES_URL}
    ports:
      - 465:465
      - 8025:8025
    labels:
      traefik.tcp.routers.mailrise.rule: HostSNI(`${DOMAIN}`)
      traefik.tcp.routers.mailrise.tls: true
      traefik.tcp.routers.mailrise.tls.certresolver: letsencrypt
      traefik.tcp.routers.mailrise.entrypoints: websecure

  diun:
    image: crazymax/diun
    container_name: diun
    command: serve
    <<: *common
    volumes:
      - config-diun:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      <<: *env-vars
      DIUN_WATCH_WORKERS: 20
      DIUN_WATCH_SCHEDULE: 0 */6 * * *
      DIUN_WATCH_JITTER: 30s
      DIUN_PROVIDERS_DOCKER: true
      DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT: true
      DIUN_NOTIF_DISCORD_WEBHOOKURL: ${DISCORD_WEBHOOK_URL}
      DIUN_NOTIF_DISCORD_MENTIONS: ${DISCORD_MENTIONS}
    labels:
      traefik.enable: false

