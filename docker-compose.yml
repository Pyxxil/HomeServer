version: '3.7'

networks:
        web:
                external: true
        internal:
                external: false

services:
        traefik:
                container_name: dash
                image: traefik:latest
                restart: unless-stopped
                command:
                        - "--api=true"
                        - "--api.dashboard=true"
                        - "--api.insecure=true"
                        - "--entrypoints.web.address=:80"
                        - "--log.level=DEBUG"
                        - "--providers.docker=true"
                        - "--providers.docker.watch"
                        - "--providers.docker.exposedbydefault=false"
                ports:
                        - 80:80
                        - 8080:8080
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock
                        - ${CONFIG_DIR}/traefik/traefik.yml:/traefik.yml
                networks:
                        - web
                labels:
                        traefik.http.routers.dashboard.rule: Host(`${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
                        traefik.http.routers.dashboard.service: api@internal
                        plugsy.name: Traefik
                        plugsy.category: System

        plugsy:
                container_name: plugsy
                image: plugsy/core
                restart: always
                networks:
                        - web
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock
                ports:
                        - 8000:3000
                labels:
                        traefik.port: 8000
                        traefik.http.routers.plugsy.rule: Host(`plugins.${DOMAIN}`)

        portainer:
                image: portainer/portainer-ce
                container_name: portainer
                restart: unless-stopped
                security_opt:
                        - no-new-privileges:true
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock
                        - ${CONFIG_DIR}/portainer:/data
                ports:
                        - 9000:9000
                networks:
                        - web
                        - internal
                labels:
                        traefik.port: 9000
                        traefik.http.routers.portainer.rule: Host(`portainer.${DOMAIN}`)
                        traefik.http.services.portainer.loadbalancer.server.port: 9000
                        plugsy.name: Portainer
                        plugsy.category: System
                        plugsy.link: http://portainer.${DOMAIN}

        heimdall:
                image: lscr.io/linuxserver/heimdall
                container_name: heimdall
                restart: unless-stopped
                networks:
                        - web
                volumes:
                        - ${CONFIG_DIR}/heimdall:/config
                ports:
                        - 83:80
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                labels:
                        traefik.port: 83
                        traefik.http.routers.heimdall.rule: Host(`dash.${DOMAIN}`)
                        plugsy.name: Heimdall
                        plugsy.category: System
                        plugsy.link: http://dash.${DOMAIN}

        database:
                image: lscr.io/linuxserver/mariadb
                container_name: MariaDB
                restart: unless-stopped
                volumes:
                        - ${CONFIG_DIR}/mariadb:/config
                ports:
                        - 3306:3306
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                        MYSQL_DATABASE: ${DATABASE}
                        MYSQL_USER: ${DATABASE_USERNAME}
                        MYSQL_PASSWORD: ${DATABASE_PASSWORD}
                        MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
                networks:
                        - internal
                labels:
                        traefik.enable: false
                        plugsy.name: MariaDB
                        plugsy.category: System

        adguard:
                container_name: adguard
                image: adguard/adguardhome
                restart: always
                volumes:
                        - ${CONFIG_DIR}/adguard:/opt/adguardhome/conf
                networks:
                        - web
                ports:
                        - 53:53/tcp
                        - 53:53/udp
                        - 443:443/tcp
                        - 443:443/udp
                        - 3000:3000/tcp
                labels:
                        traefik.port: 3000
                        traefik.http.routers.adguard.rule: Host(`dns.${DOMAIN}`)
                        traefik.http.services.adguard.loadbalancer.server.port: 3000
                        plugsy.name: AdGuard
                        plugsy.link: http://dns.${DOMAIN}/
                        plugsy.category: Privacy

        cloud:
                container_name: cloud
                image: nextcloud
                restart: unless-stopped
                depends_on:
                        - database
                environment:
                        MYSQL_HOST: ${DATABASE_HOST}
                        MYSQL_DATABASE: ${DATABASE}
                        MYSQL_USER: ${DATABASE_USERNAME}
                        MYSQL_PASSWORD: ${DATABASE_PASSWORD}
                ports:
                        - 8081:80
                networks:
                        - web
                        - internal
                labels:
                        traefik.port: 8081
                        traefik.http.routers.cloud.rule: Host(`cloud.${DOMAIN}`)
                        plugsy.name: NextCloud
                        plugsy.category: Cloud
                        plugsy.parents: MariaDB
                        plugsy.link: http://cloud.${DOMAIN}

        wiki:
                container_name: wiki
                image: lscr.io/linuxserver/bookstack
                restart: unless-stopped
                depends_on:
                        - database
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                        APP_URL: http://wiki.${DOMAIN}
                        DB_HOST: ${DATABASE_HOST}
                        DB_DATABASE: ${DATABASE}
                        DB_USER: ${DATABASE_USERNAME}
                        DB_PASS: ${DATABASE_PASSWORD}
                volumes:
                        - ${CONFIG_DIR}/bookstack:/config
                ports:
                        - 6875:80
                networks:
                        - web
                        - internal
                labels:
                        traefik.port: 6875
                        traefik.http.routers.wiki.rule: Host(`wiki.${DOMAIN}`)
                        plugsy.name: Personal Wiki
                        plugsy.category: Cloud
                        plugsy.parents: MariaDB
                        plugsy.link: http://wiki.${DOMAIN}

        radarr:
                image: lscr.io/linuxserver/radarr:latest
                container_name: radarr
                restart: unless-stopped
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                volumes:
                        - ${CONFIG_DIR}/radarr:/config
                        - ${MEDIA_DIR}/Movies:/movies
                        - ${DOWNLOAD_DIR}:/downloads
                ports:
                        - 7878:7878
                networks:
                        - web
                labels:
                        traefik.port: 7878
                        traefik.http.routers.radarr.rule: Host(`movies.${DOMAIN}`)
                        plugsy.name: Radarr
                        plugsy.category: Media
                        plugsy.link: http://movies.${DOMAIN}

        sonarr:
                image: lscr.io/linuxserver/sonarr:latest
                container_name: sonarr
                restart: unless-stopped
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                volumes:
                        - ${CONFIG_DIR}/sonarr:/config
                        - ${MEDIA_DIR}/Television Shows:/shows
                        - ${DOWNLOAD_DIR}:/downloads
                ports:
                        - 8989:8989
                networks:
                        - web
                labels:
                        traefik.port: 8989
                        traefik.http.routers.sonarr.rule: Host(`tv.${DOMAIN}`)
                        plugsy.name: Sonarr
                        plugsy.category: Media
                        plugsy.link: http://tv.${DOMAIN}

        qbittorrent:
                image: lscr.io/linuxserver/qbittorrent:latest
                container_name: qbittorrent
                restart: unless-stopped
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                        WEBUI_PORT: 8980
                volumes:
                        - ${CONFIG_DIR}/qbittorrent:/config
                        - ${DOWNLOAD_DIR}:/downloads
                ports:
                        - 8980:8980
                        - 6881:6881
                        - 6881:6881/udp
                networks:
                        - web
                labels:
                        traefik.port: 8980
                        traefik.http.routers.qbittorrent.rule: Host(`torrent.${DOMAIN}`)
                        traefik.http.middlewares.qbittorrent-headers.headers.customrequestheaders.X-Frame-Options: SAMEORIGIN
                        traefik.http.middlewares.qbittorrent-headers.headers.customrequestheaders.Referer: ""
                        traefik.http.middlewares.qbittorrent-headers.headers.customrequestheaders.Origin: ""
                        traefik.http.routers.qbittorrent.middlewares: qbittorrent-headers
                        traefik.http.services.qbittorrent.loadbalancer.server.port: 8980
                        traefik.http.services.qbittorrent.loadbalancer.passhostheader: false
                        plugsy.name: qBittorrent
                        plugsy.category: Media
                        plugsy.link: http://torrent.${DOMAIN}

        watch:
                container_name: watch
                image: lscr.io/linuxserver/jellyfin
                restart: unless-stopped
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                volumes:
                        - ${CONFIG_DIR}/jellyfin:/config
                        - ${CONFIG_DIR}/jellyfin/cache:/cache
                        - ${MEDIA_DIR}/Movies:/Movies
                        - ${MEDIA_DIR}/Television Shows:/Television Shows
                        - ${MEDIA_DIR}/Music:/Music
                        - ${MEDIA_DIR}/Youtube:/Youtube
                devices:
                        - /dev/dri/renderD128:/dev/dri/renderD128
                        - /dev/dri/card0:/dev/dri/card0
                ports:
                        - 8920:8920
                networks:
                        - web
                labels:
                        traefik.port: 8920
                        traefik.http.routers.watch.rule: Host(`watch.${DOMAIN}`)
                        plugsy.name: Jellyfin
                        plugsy.category: Media
                        plugsy.link: http://watch.${DOMAIN}

        sync:
                container_name: sync
                image: lscr.io/linuxserver/syncthing
                restart: unless-stopped
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                volumes:
                        - ${CONFIG_DIR}/syncthing:/config
                        - ${SYNC_DIR}:/config/Sync
                ports:
                        - 8384:8384
                        - 22000:22000
                        - 21027:21027/udp
                networks:
                        - web
                labels:
                        traefik.port: 8384
                        traefik.http.routers.sync.rule: Host(`sync.${DOMAIN}`)
                        plugsy.name: Syncthing
                        plugsy.category: Cloud
                        plugsy.link: http://sync.${DOMAIN}

        calibre:
                container_name: calibre
                image: lscr.io/linuxserver/calibre
                restart: unless-stopped
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                volumes:
                        - ${MEDIA_DIR}/Books:/config
                ports:
                        - 8082:8080
                        - 8083:8081
                networks:
                        - web
                labels:
                        traefik.port: 8082
                        traefik.http.routers.calibre.rule: Host(`calibre.${DOMAIN}`)
                        plugsy.name: Calibre
                        plugsy.category: System

        read:
                container_name: read
                image: lscr.io/linuxserver/calibre-web
                restart: unless-stopped
                environment:
                        PUID: ${PUID}
                        PGID: ${PGID}
                        TZ: ${TIMEZONE}
                        DOCKER_MODS: linuxserver/calibre-web:calibre
                volumes:
                        - ${CONFIG_DIR}/calibre-web:/config
                        - ${MEDIA_DIR}/Books:/books
                ports:
                        - 8084:8083
                networks:
                        - web
                labels:
                        traefik.port: 8084
                        traefik.http.routers.read.rule: Host(`read.${DOMAIN}`)
                        plugsy.name: Calibre Web
                        plugsy.category: Media
                        plugsy.link: http://read.${DOMAIN}

        ytdl_material:
                image: tzahi12345/youtubedl-material:latest
                container_name: YoutubeDL
                environment: 
                        ALLOW_CONFIG_MUTATIONS: 'true'
                        ytdl_mongodb_connection_string: 'mongodb://mongo:27017'
                        ytdl_use_local_db: 'false'
                        write_ytdl_config: 'true'
                restart: unless-stopped
                depends_on:
                        - mongo
                volumes:
                        - ${CONFIG_DIR}/youtube/appdata:/app/appdata
                        - ${MEDIA_DIR}/Music:/app/audio
                        - ${MEDIA_DIR}/Youtube:/app/video
                        - ${CONFIG_DIR}/youtube/subscriptions:/app/subscriptions
                        - ${CONFIG_DIR}/youtube/users:/app/users
                ports:
                        - 8998:17442
                networks:
                        - internal
                        - web
                labels:
                        traefik.port: 8998
                        traefik.http.routers.youtube.rule: Host(`youtube.${DOMAIN}`)
                        plugsy.name: YoutubeDL Material
                        plugsy.category: Media
                        plugsy.link: http://youtube.${DOMAIN}


        mongo:
                image: mongo
                container_name: mongo
                ports:
                        - 27017:27017
                logging:
                        driver: none
                networks:
                        - internal
                restart: unless-stopped
                volumes:
                        - ${CONFIG_DIR}/mongo:/data/db
                labels:
                        traefik.enable: false
                        plugsy.name: MongoDB
                        plugsy.category: System
