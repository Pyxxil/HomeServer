
x-common-databases: &databases
  postgres:
    image: postgres:15
    container_name: postgres
    <<: *common
    networks:
      - internal
    volumes:
      - config-postgres:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${TODO_DATABASE}"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      <<: *env-vars
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: vikunja,vaultwarden,outline,auth,pocket,mealie,firefly,letsblockit
    labels:
      traefik.enable: false

  redis:
    image: redis
    container_name: redis
    <<: *common
    networks:
      - internal
    command: ["redis-server", "/data/redis.conf", "--save", "60", "1", "--loglevel", "warning" ]
    volumes:
      - config-redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    labels:
      traefik.enable: false

  minio:
    image: minio/minio
    container_name: minio
    entrypoint: sh
    command: -c 'minio server /data --console-address ":9001"'
    <<: *common
    volumes:
      - config-outline-storage:/data
    environment:
      <<: *env-vars
      MINIO_BROWSER_REDIRECT_URL: "https://minio.${DOMAIN}"
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    labels:
      traefik.http.routers.minio.rule: Host(`minio.${DOMAIN}`)
      traefik.http.services.minio.loadbalancer.server.port: 9001
      traefik.http.routers.minio.entrypoints: websecure
      traefik.http.routers.minio.tls: true
      traefik.http.routers.minio.tls.certResolver: letsencrypt
      traefik.http.routers.minio.service: minio
      traefik.http.routers.minioadmin.entrypoints: websecure
      traefik.http.routers.minioadmin.rule: Host(`minioapi.${DOMAIN}`)
      traefik.http.services.minioadmin.loadbalancer.server.port: 9000
      traefik.http.routers.minioadmin.tls: true
      traefik.http.routers.minioadmin.tls.certResolver: letsencrypt
      traefik.http.routers.minioadmin.service: minioadmin

