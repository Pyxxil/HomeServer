x-common-metrics: &metrics
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    <<: *common
    entrypoint: ["/bin/sh", "-c"]
    command:
      - "rm -rf /prometheus/data/chunks_head; /bin/prometheus
        --config.file=/etc/prometheus/prometheus.yml
        --storage.tsdb.path=/prometheus"
    volumes:
      - config-prometheus:/etc/prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:9090 || exit 1"]
      <<: *healthcheck
    labels:
      traefik.http.routers.prometheus.entrypoints: websecure
      traefik.http.services.prometheus.loadbalancer.server.port: 9090
      traefik.http.routers.prometheus.tls: true
      traefik.http.routers.prometheus.tls.certResolver: letsencrypt
      traefik.http.routers.prometheus.middlewares: auth@file
      traefik.backend: prometheus

  grafana:
    image: grafana/grafana
    container_name: metrics
    hostname: metrics.${DOMAIN}
    <<: *common
    user: ${PUID}
    environment:
      <<: *env-vars
      GF_SERVER_ROOT_URL: https://metrics.${DOMAIN}
      OTEL_SERVICE_NAME: grafana
    volumes:
      - config-grafana:/etc/grafana
      - config-grafana-data:/var/lib/grafana
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3000/healthz | grep -i 'ok' || exit 1"]
      <<: *healthcheck
    labels:
      traefik.http.services.grafana.loadBalancer.server.port: 3000
      traefik.http.routers.grafana.entrypoints: websecure
      traefik.http.routers.grafana.tls: true
      traefik.http.routers.grafana.tls.certResolver: letsencrypt

  adguard_exporter:
    image: ebrianne/adguard-exporter
    container_name: adguard-exporter
    <<: *common
    environment:
      adguard_protocol: http
      adguard_hostname: 192.168.1.1
      adguard_username: ${ADGUARD_USERNAME}
      adguard_password: ${ADGUARD_PASSWORD}
      adguard_port: 81
      server_port: 9617
      interval: 10s
      log_limit: 10000
    labels:
      traefik.enable: false

  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: host
    command: --path.rootfs=/host
    <<: *common
    pid: host
    volumes:
      - /:/host:ro,rslave
    healthcheck:
      test: ["CMD-SHELL", "/bin/netstat -pant | /bin/grep ':9100'"]
      <<: *healthcheck
    labels:
      traefik.enable: false

